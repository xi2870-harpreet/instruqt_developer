#!/bin/bash
#
# This is a sample setup script. Rename this file to setup-$CONTAINER
# (where $container is the name of the container as defined in your config.yml),
# and replace this content with your own script.
#
# This script will be run when you setup the challenge.
#
# Remember that the exit code is important. See the documentation
# for more information.
#
echo "waiting 180 seconds for cloud-init to update /etc/apt/sources.list"
timeout 180 /bin/bash -c \
  'until stat /var/lib/cloud/instance/boot-finished 2>/dev/null; do echo waiting ...; sleep 1; done'
# Added sleep to make sure apt is unlocked
echo "Sleeping to make sure we are started"
sleep 30

# Get temporary license
# curl -o license.json --user instruqt:nk60kjLvnjIN -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d '{"firstName":"Instruqt","lastName":"User","company":"Training","email":"instruqt@company.com"}' https://download.xebialabs.com/api/temporary/xl-release
# Temporarily disabled checking of SSL Cert, as it is expired
curl -k -o license.json --user instruqt:nk60kjLvnjIN -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d '{"firstName":"Instruqt","lastName":"User","company":"Training","email":"instruqt@company.com"}' https://download.xebialabs.com/api/temporary/xl-release
# Alternative Server
# curl -o license.json --user instruqt:nk60kjLvnjIN -H "Content-Type: application/json" -H "Accept: application/json" -X POST -d '{"firstName":"Instruqt","lastName":"User","company":"Training","email":"instruqt@company.com"}' https://download2.xebialabs.com/api/temporary/xl-release
cat license.json | jq -r .license > /opt/xlr/server/conf/xl-release-license.lic

# Add hotfixes for Reporting data
svn export https://github.com/xebialabs/instruqt-trainings.git/trunk/topic-xl-release-training/track-xlrelease-end-user-training/artifacts/resources/hotfix
svn export https://github.com/xebialabs/instruqt-trainings.git/trunk/topic-xl-release-training/track-xlrelease-end-user-training/artifacts/resources/hotfix-plugins

cp hotfix/fix-release-risks-and-progress.jar /opt/xlr/server/hotfix/lib/
cp hotfix-plugins/workaround-for-fixing-tile-legends.jar /opt/xlr/server/hotfix/plugins/
chown -R xlrelease:xlrelease /opt/xlr/server/hotfix/*
rm -rf hotfix
rm -rf hotfix-plugins

chown -R xlrelease:xlrelease /opt/xlr/server

# Restart XL Release
systemctl restart xl-release
rm license.json
# Check if XL Release is up
echo "Check XL Release Status"
while ! nc -z localhost 5516; do echo "Port 5516 not open" && sleep 1; done
echo "Port is open, continuing"

# Set Archiving to 0 Days
curl -f http://admin:admin@localhost:5516/settings/ci/Configuration/settings/ArchivingSettings -X PUT \
  -H 'Accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{"id":"Configuration/settings/ArchivingSettings",
  "type":"xlrelease.ArchivingSettings",
  "releaseAgeToDeleteFromJcr":0,
  "preArchivingEnabled":true}'

  echo " Test"
